[
    {
        "title": "Epic: E1 MCP transport and validation",
        "body": "Epic for transport layer and validation per FR1.\n\nScope:\n- JSON-RPC router and method registry\n- JSON Schema validation (draft-07)\n- Error mapping and tool discovery\n\nRequirement: FR1",
        "labels": [
            "Epic",
            "FR1",
            "Area:Transport",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E2 File generation suite",
        "body": "Epic for file tools per FR2.\n\nScope:\n- file.preview\n- file.generate (in-memory by default, write=true optional)\n- file.estimateFilename\n- file.parseAndValidate\n\nRequirement: FR2",
        "labels": [
            "Epic",
            "FR2",
            "Area:File",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E3 Row operations suite",
        "body": "Epic for row tools per FR3.\n\nScope:\n- row.generate (valid/invalid)\n- row.validate\n\nRequirement: FR3",
        "labels": [
            "Epic",
            "FR3",
            "Area:Row",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E4 EaziPay support",
        "body": "Epic for EaziPay specifics per FR4.\n\nScope:\n- 14 columns fixed, last empty\n- Always headerless (NH)\n- Supported date formats\n\nRequirement: FR4",
        "labels": [
            "Epic",
            "FR4",
            "Area:EaziPay",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E5 SDDirect support",
        "body": "Epic for SDDirect specifics per FR5.\n\nScope:\n- Optional headers when requested\n- Column count from generator config\n\nRequirement: FR5",
        "labels": [
            "Epic",
            "FR5",
            "Area:SDDirect",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E6 Calendar utilities",
        "body": "Epic for calendar tools per FR6.\n\nScope:\n- nextWorkingDay\n- isWorkingDay (UK bank holidays + weekends)\n\nRequirement: FR6",
        "labels": [
            "Epic",
            "FR6",
            "Area:Calendar",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E7 Filesystem tools (Phase 4.1)",
        "body": "Epic for filesystem tools per FR7 (Phase 4.1).\n\nScope:\n- fs.read\n- fs.list\n- fs.delete\n\nRequirement: FR7",
        "labels": [
            "Epic",
            "FR7",
            "Area:FS",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "Epic: E8 Configuration and health",
        "body": "Epic for config and health per FR8.\n\nScope:\n- config.get, config.setDefaults\n- runtime.health (optional)\n\nRequirement: FR8",
        "labels": [
            "Epic",
            "FR8",
            "Area:Config",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E9 Quality, performance, observability",
        "body": "Epic for NFRs.\n\nScope:\n- Logging, performance, reliability\n- Type safety, test reliability\n\nRequirement: NFR",
        "labels": [
            "Epic",
            "NFR",
            "Area:Quality",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "Epic: E10 Testing and integration",
        "body": "Epic for testing per NFR.\n\nScope:\n- Unit + integration tests for MCP tools\n- Backward-compat with existing generators\n\nRequirement: NFR",
        "labels": [
            "Epic",
            "NFR",
            "Area:Testing",
            "MCP"
        ],
        "milestone": null
    },
    {
        "title": "[MCP-4.0-001] Minimal MCP router and method registry",
        "body": "Type: Story\nRequirement: FR1\nArea: Transport\n\nAcceptance:\n- Register a dummy method; handle JSON-RPC 2.0; return structured errors.\n- server at `src/mcp/server.ts` accepts method map and validates JSON-RPC envelope.",
        "labels": [
            "Story",
            "P0",
            "FR1",
            "Area:Transport",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.0-002] JSON Schema validation pipeline",
        "body": "Type: Story\nRequirement: FR1\nArea: Transport\n\nAcceptance:\n- Validate params (draft-07).\n- Invalid requests yield VALIDATION_ERROR with issues array.\n- Schema loader caches schemas from `documentation/Schemas/**`.",
        "labels": [
            "Story",
            "P0",
            "FR1",
            "Area:Transport",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.0-003] Error mapping and trace IDs",
        "body": "Type: Story\nRequirement: FR1\nArea: Transport\n\nAcceptance:\n- Map errors to { code, message, details? }.\n- Internal errors include stable traceId.",
        "labels": [
            "Story",
            "P1",
            "FR1",
            "Area:Transport",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-004] Tool discovery endpoint",
        "body": "Type: Task\nRequirement: FR1\nArea: Transport\n\nAcceptance:\n- List registered tools with method, description, and schema $id.",
        "labels": [
            "Task",
            "P2",
            "FR1",
            "Area:Transport",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-010] file.generate (in-memory by default)",
        "body": "Type: Story\nRequirement: FR2\nArea: File\n\nAcceptance:\n- Returns { fileContent, meta, filePath? }.\n- Only writes when write=true; default path `output/{fileType}/{SUN}/...`.",
        "labels": [
            "Story",
            "P0",
            "FR2",
            "Area:File",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-011] file.preview",
        "body": "Type: Story\nRequirement: FR2\nArea: File\n\nAcceptance:\n- Returns { content, meta } with zero writes.",
        "labels": [
            "Story",
            "P0",
            "FR2",
            "Area:File",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-012] file.estimateFilename",
        "body": "Type: Story\nRequirement: FR2\nArea: File\n\nAcceptance:\n- Predicts filename deterministically from inputs.",
        "labels": [
            "Story",
            "P1",
            "FR2",
            "Area:File",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-013] file.parseAndValidate",
        "body": "Type: Story\nRequirement: FR2\nArea: File\n\nAcceptance:\n- Parses content and returns validation summary for supported file types.",
        "labels": [
            "Story",
            "P1",
            "FR2",
            "Area:File",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-020] row.generate (valid/invalid)",
        "body": "Type: Story\nRequirement: FR3\nArea: Row\n\nAcceptance:\n- Returns { fields[], asLine } with option to generate invalid.\n- Deterministic with seed.",
        "labels": [
            "Story",
            "P0",
            "FR3",
            "Area:Row",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-021] row.validate",
        "body": "Type: Story\nRequirement: FR3\nArea: Row\n\nAcceptance:\n- Returns { valid, violations[] } with machine-readable codes.",
        "labels": [
            "Story",
            "P0",
            "FR3",
            "Area:Row",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-030] EaziPay fixed format enforcement",
        "body": "Type: Story\nRequirement: FR4\nArea: EaziPay\n\nAcceptance:\n- 14 columns, last empty; headerless.\n- Date formats: YYYY-MM-DD, DD-MMM-YYYY, DD/MM/YYYY.",
        "labels": [
            "Story",
            "P0",
            "FR4",
            "Area:EaziPay",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-031] eazipay.pickOptions tool",
        "body": "Type: Task\nRequirement: FR4\nArea: EaziPay\n\nAcceptance:\n- Returns enums/options for UI pickers (dates, separators, etc.).",
        "labels": [
            "Task",
            "P1",
            "FR4",
            "Area:EaziPay",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-040] SDDirect includeHeaders option",
        "body": "Type: Story\nRequirement: FR5\nArea: SDDirect\n\nAcceptance:\n- When requested, headers included.\n- Column count from generator config.",
        "labels": [
            "Story",
            "P1",
            "FR5",
            "Area:SDDirect",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-050] calendar.nextWorkingDay",
        "body": "Type: Story\nRequirement: FR6\nArea: Calendar\n\nAcceptance:\n- Respects weekends and UK bank holidays (current logic).",
        "labels": [
            "Story",
            "P0",
            "FR6",
            "Area:Calendar",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-051] calendar.isWorkingDay",
        "body": "Type: Story\nRequirement: FR6\nArea: Calendar\n\nAcceptance:\n- True/false for date against same calendar set.",
        "labels": [
            "Story",
            "P1",
            "FR6",
            "Area:Calendar",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-060] fs.read",
        "body": "Type: Story\nRequirement: FR7\nArea: FS\n\nAcceptance:\n- Reads within output/ sandbox only; deny by default paths.",
        "labels": [
            "Story",
            "P1",
            "FR7",
            "Area:FS",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-061] fs.list",
        "body": "Type: Story\nRequirement: FR7\nArea: FS\n\nAcceptance:\n- Lists within sandbox directories; supports basic filters.",
        "labels": [
            "Story",
            "P2",
            "FR7",
            "Area:FS",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-062] fs.delete",
        "body": "Type: Story\nRequirement: FR7\nArea: FS\n\nAcceptance:\n- Deletes within sandbox; guards against path traversal.",
        "labels": [
            "Story",
            "P2",
            "FR7",
            "Area:FS",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-070] config.get",
        "body": "Type: Story\nRequirement: FR8\nArea: Config\n\nAcceptance:\n- Returns safe defaults; no secrets.",
        "labels": [
            "Story",
            "P1",
            "FR8",
            "Area:Config",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.0-071] config.setDefaults",
        "body": "Type: Story\nRequirement: FR8\nArea: Config\n\nAcceptance:\n- Updates in-memory defaults; persisted only if FS enabled in 4.1.",
        "labels": [
            "Story",
            "P1",
            "FR8",
            "Area:Config",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-072] runtime.health",
        "body": "Type: Story\nRequirement: FR8\nArea: Runtime\n\nAcceptance:\n- Returns status, uptime, versions.",
        "labels": [
            "Story",
            "P2",
            "FR8",
            "Area:Runtime",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.0-080] Unit tests for router and first 3 tools",
        "body": "Type: Story\nRequirement: NFR\nArea: Quality\n\nAcceptance:\n- Vitest suite; coverage for happy/unhappy paths.",
        "labels": [
            "Story",
            "P0",
            "NFR",
            "Area:Quality",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.2-081] Structured logging with toggleable verbosity",
        "body": "Type: Story\nRequirement: NFR\nArea: Observability\n\nAcceptance:\n- JSON logs; redact sensitive values.",
        "labels": [
            "Story",
            "P1",
            "NFR",
            "Area:Observability",
            "Phase 4.2",
            "MCP"
        ],
        "milestone": "Phase 4.2"
    },
    {
        "title": "[MCP-4.2-082] Performance: 1k-row preview < 1s",
        "body": "Type: Story\nRequirement: NFR\nArea: Performance\n\nAcceptance:\n- Bench test + README note; memory growth ~ linear.",
        "labels": [
            "Story",
            "P1",
            "NFR",
            "Area:Performance",
            "Phase 4.2",
            "MCP"
        ],
        "milestone": "Phase 4.2"
    },
    {
        "title": "[MCP-4.2-083] Reliability hardening and error retries",
        "body": "Type: Story\nRequirement: NFR\nArea: Reliability\n\nAcceptance:\n- Add targeted retries/timeouts where applicable; document behaviors.",
        "labels": [
            "Story",
            "P2",
            "NFR",
            "Area:Reliability",
            "Phase 4.2",
            "MCP"
        ],
        "milestone": "Phase 4.2"
    },
    {
        "title": "[MCP-4.0-090] Integration tests for 3 initial tools",
        "body": "Type: Story\nRequirement: NFR\nArea: Testing\n\nAcceptance:\n- JSON-RPC tests cover schema validation and service calls.",
        "labels": [
            "Story",
            "P0",
            "NFR",
            "Area:Testing",
            "Phase 4.0",
            "MCP"
        ],
        "milestone": "Phase 4.0"
    },
    {
        "title": "[MCP-4.1-091] Integration tests for remaining tools",
        "body": "Type: Story\nRequirement: NFR\nArea: Testing\n\nAcceptance:\n- Coverage for all remaining tools.",
        "labels": [
            "Story",
            "P0",
            "NFR",
            "Area:Testing",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    },
    {
        "title": "[MCP-4.1-092] Backward-compat checks with existing generators",
        "body": "Type: Task\nRequirement: NFR\nArea: Testing\n\nAcceptance:\n- Ensure no regressions in existing generator tests.",
        "labels": [
            "Task",
            "P1",
            "NFR",
            "Area:Testing",
            "Phase 4.1",
            "MCP"
        ],
        "milestone": "Phase 4.1"
    }
]